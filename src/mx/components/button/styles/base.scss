@use "sass:color";
@use "sass:math";

@use "../../../elevation";
@use "/src/mx/values";
@use "../../../typescale";

@use "../../../lfx/lfx-provider" with ($mx-lfx--observer-distance: 14px);


$width: fit-content;
$height: 40px;
$radius: 20px;
$radius-top-left: $radius;
$radius-top-right: $radius;
$radius-bottom-left: $radius;
$radius-bottom-right: $radius;

$elevation: 24px;

$behaviour-on-hover: values.$mx-none-on-hover;
$behaviour-on-pressed: values.$mx-none-on-pressed;

@function uniform-radius () {
  @if ($radius-top-left == $radius-top-right == $radius-bottom-left == $radius-bottom-right) {
    @return true;
  }

  @return false;
}

/**

neutral0="#000000",
    neutral10="#1c1b1f",
    neutral100="#ffffff",
    neutral20="#313033",
    neutral30="#484649",
    neutral40="#605d62",
    neutral50="#787579",
    neutral60="#939094",
    neutral70="#aeaaae",
    neutral80="#c9c5ca",
    neutral90="#e6e1e5",
    neutral95="#f4eff4",
    neutral99="#fffbfe",
    neutral_variant0="#000000",
    neutral_variant10="#1d1a22",
    neutral_variant100="#ffffff",
    neutral_variant20="#322f37",
    neutral_variant30="#49454f",
    neutral_variant40="#605d66",
    neutral_variant50="#79747e",
    neutral_variant60="#938f99",
    neutral_variant70="#aea9b4",
    neutral_variant80="#cac4d0",
    neutral_variant90="#e7e0ec",
    neutral_variant95="#f5eefa",
    neutral_variant99="#fffbfe",

 */

@mixin container-radius {
  @if (uniform-radius()) {
    border-radius: $radius;
  } @else {
    border-radius: $radius-top-left $radius-top-right $radius-bottom-right $radius-bottom-left;
  }
}

@mixin shape {
  all: unset;
  width: $width;
  height: $height;
  transition-duration: 200ms;
  user-select: none;

  @include container-radius;
}

@mixin elevation-shadow-on-hover {
  @if $behaviour-on-hover == values.$mx-elevation-on-hover {
    $scale: lfx-provider.compute-angular-scale(160px, 24px, 4px, 40px);

    @include elevation.mx-shadow(4px);
    transform: scale($scale);
  }
}

@mixin elevation-shadow-on-pressed {
  @if $behaviour-on-pressed == values.$mx-elevation-on-pressed {
    $scale: lfx-provider.compute-angular-scale(160px, 24px, 4px, 40px);

    @include elevation.mx-shadow(1px);
    transform: scale($scale * 0.25);
  }
}


.component {
  @include shape;

  position: relative;
}

.shadow-layer {
  @include shape;

  //pointer-events: none;

  &--hovered {
  }

  &--pressed {
  }
}

.container {
  @include shape;

  padding-left: 24px;
  padding-right: 24px;

  display: flex;
  justify-content: center;
  align-items: center;

  //pointer-events: none;
}

.state-layer {
  @include shape;

  width: 100%;

  //pointer-events: none;
}

.content-layer {

}

.label {
  @include shape;
  @include typescale.label-large;
  user-select: none;
  //pointer-events: none;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: default;

  position: relative;
}

.shadow-test {
  @include elevation.mx-shadow(24)
}
