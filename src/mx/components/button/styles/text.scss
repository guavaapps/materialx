@use "/src/mx/values";
@use "../../../elevation";
@use "/src/mx/typescale";
@use "base";

@use "sass:color";
@use "sass:math";

$mx-button--elevation-on-hover: "elevation";
$mx-button--overlay-on-hover: "overlay";
$mx-button--overlay-elevation-on-hover: "overlay|elevation";
$mx-button--on-hover: $mx-button--overlay-on-hover;

.text-button-component {
  @extend .component;
}

.text-button-shadow-layer {
  @extend .shadow-layer;

  &--hovered {
    @include elevation.mx-shadow(elevation.$level0)
  }
}

.text-button-container {
  @extend .container;

  position: relative;
  overflow: hidden;

  border: none;

  &--enabled {
    background-color: transparent;
  }

  &--disabled {
    $color: color.change(values.$colorOnSurface, $alpha: 0.12);
    border-color: $color;
  }

  &--focused {
    border-color: values.$colorPrimary;
  }

  &--hovered {
    @extend .text-button-container--enabled;
  }

  &--pressed {
    @extend .text-button-container--enabled;
  }
}

.text-button-state-layer {
  @extend .state-layer;

  position: absolute;

  &--hovered {
    background-color: color.change(values.$colorPrimary, $alpha: values.$state-layer-opacity--hovered);
  }

  &--focused {
    background-color: color.change(values.$colorPrimary, $alpha: values.$state-layer-opacity--focused);
  }

  &--pressed {
    background-color: color.change(values.$colorPrimary, $alpha: values.$state-layer-opacity--pressed);
  }
}

.text-button-label {
  @extend .label;

  @include typescale.label-large;

  color: values.$colorPrimary;

  &--disabled {
    color: color.change(values.$colorOnSurface, $alpha: 0.38);
  }
}